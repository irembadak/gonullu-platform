// Gerekli paketleri yÃ¼kle
require('dotenv').config(); // .env dosyasÄ±nÄ± okumak iÃ§in
const express = require('express');
const cors = require('cors');
const mongoose = require('mongoose');

// Express uygulamasÄ±nÄ± oluÅŸtur
const app = express();

// Middleware'ler (ara yazÄ±lÄ±mlar)
app.use(cors()); // Frontend'den gelen isteklere izin ver
app.use(express.json()); // Gelen verileri JSON olarak iÅŸle

// Route dosyalarÄ±
const eventRoutes = require('./routes/eventRoutes');
const authRoutes = require('./routes/authRoutes');

// Route'larÄ± kullan
app.use('/api/events', eventRoutes);
app.use('/api/auth', authRoutes);

// MongoDB baÄŸlantÄ±sÄ±
mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/gonullu-platformu')
  .then(() => console.log('MongoDB baÄŸlantÄ±sÄ± baÅŸarÄ±lÄ±'))
  .catch(err => console.error('MongoDB baÄŸlantÄ± hatasÄ±:', err));

// Basit bir GET endpoint'i (kÃ¶k dizin)
app.get('/', (req, res) => {
  res.send('GÃ¶nÃ¼llÃ¼ Platformu Backend Ã‡alÄ±ÅŸÄ±yor! ðŸš€');
});

// Sunucuyu baÅŸlat
const PORT = process.env.PORT || 5000; // .env'den portu al veya 5000 kullan
app.listen(PORT, () => {
  console.log(`Sunucu http://localhost:${PORT} adresinde Ã§alÄ±ÅŸÄ±yor`);
});
